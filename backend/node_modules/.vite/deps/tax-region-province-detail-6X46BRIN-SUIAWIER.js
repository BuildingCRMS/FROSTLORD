import {
  TaxOverrideTable,
  TaxRateLine,
  useTaxOverrideTable
} from "./chunk-FI4UZLDA.js";
import "./chunk-VD6KBTYK.js";
import {
  TaxRegionCard
} from "./chunk-SRX4TKHU.js";
import {
  getProvinceByIso2,
  isProvinceInCountry
} from "./chunk-KL72CHML.js";
import {
  useTaxRateTableQuery
} from "./chunk-GDXEFZZY.js";
import "./chunk-XYHEMHQ5.js";
import "./chunk-QF476XOZ.js";
import "./chunk-5IEWQMNI.js";
import "./chunk-2FQQO4KQ.js";
import "./chunk-RE3B227S.js";
import "./chunk-GP4GGMFR.js";
import {
  SingleColumnPage
} from "./chunk-NGARBWWO.js";
import "./chunk-32T72GVU.js";
import "./chunk-QX6SXRUW.js";
import "./chunk-HPGXK5DQ.js";
import {
  useExtension
} from "./chunk-FTD3ZWHZ.js";
import {
  SingleColumnPageSkeleton
} from "./chunk-XKHKX2O4.js";
import "./chunk-MX6RFVPC.js";
import "./chunk-HIRVG5HY.js";
import "./chunk-XLJ6ICJ6.js";
import "./chunk-R3BVY4FC.js";
import "./chunk-HC3T7OYA.js";
import {
  useTaxRates
} from "./chunk-D43E5H7K.js";
import {
  taxRegionsQueryKeys,
  useTaxRegion
} from "./chunk-EJ632UQ3.js";
import "./chunk-AHMYJR34.js";
import "./chunk-DTNUC273.js";
import "./chunk-LO7PRBVV.js";
import "./chunk-TPHNIYVN.js";
import "./chunk-WLJHDTUS.js";
import "./chunk-CYVMSYFQ.js";
import "./chunk-5AA5N5ZK.js";
import "./chunk-K5DSQLGH.js";
import "./chunk-MJ4XXNHE.js";
import "./chunk-FZ5DZU53.js";
import "./chunk-JZH33FKG.js";
import "./chunk-XHN7KSXW.js";
import "./chunk-LIPSP7KS.js";
import "./chunk-4FJ2IEZ6.js";
import "./chunk-UKRVZK4B.js";
import "./chunk-Q2CJV6KU.js";
import "./chunk-LNFLNDVO.js";
import "./chunk-LYFHXFNX.js";
import "./chunk-K7ZSLX65.js";
import "./chunk-GRYQSEHO.js";
import "./chunk-GZ2UWOV6.js";
import "./chunk-S5UORU45.js";
import {
  queryClient
} from "./chunk-VMLNCWLE.js";
import "./chunk-CUPZIPFX.js";
import {
  sdk
} from "./chunk-AYDRMOKL.js";
import {
  useTranslation
} from "./chunk-7HWTQOXJ.js";
import "./chunk-5GF3RGIE.js";
import {
  useLoaderData,
  useParams
} from "./chunk-T7YBVUWZ.js";
import {
  Badge,
  Container,
  Heading,
  Tooltip
} from "./chunk-VSEXIPN4.js";
import "./chunk-5GLF3XJW.js";
import "./chunk-RPCDYKBN.js";
import "./chunk-7FEHWK6I.js";
import {
  keepPreviousData
} from "./chunk-R35JBZ3G.js";
import {
  require_jsx_runtime
} from "./chunk-KBTYAULA.js";
import "./chunk-QCHXOAYK.js";
import {
  __toESM
} from "./chunk-WOOG5QLI.js";

// node_modules/@medusajs/dashboard/dist/tax-region-province-detail-6X46BRIN.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);
var import_jsx_runtime4 = __toESM(require_jsx_runtime(), 1);
var TaxRegionProvinceDetailSection = ({
  taxRegion
}) => {
  const { t } = useTranslation();
  const defaultRates = taxRegion.tax_rates.filter((r) => r.is_default === true);
  const showBage = defaultRates.length === 0;
  return (0, import_jsx_runtime.jsxs)(Container, { className: "divide-y p-0", children: [
    (0, import_jsx_runtime.jsx)(
      TaxRegionCard,
      {
        taxRegion,
        type: "header",
        asLink: false,
        badge: showBage && (0, import_jsx_runtime.jsx)(Tooltip, { content: t("taxRegions.fields.noDefaultRate.tooltip"), children: (0, import_jsx_runtime.jsx)(Badge, { color: "orange", size: "2xsmall", className: "cursor-default", children: t("taxRegions.fields.noDefaultRate.label") }) })
      }
    ),
    defaultRates.map((rate) => {
      return (0, import_jsx_runtime.jsx)(TaxRateLine, { taxRate: rate, isSublevelTaxRate: true }, rate.id);
    })
  ] });
};
var PAGE_SIZE = 10;
var PREFIX = "o";
var TaxRegionProvinceOverrideSection = ({
  taxRegion
}) => {
  const { t } = useTranslation();
  const { searchParams, raw } = useTaxRateTableQuery({
    pageSize: PAGE_SIZE,
    prefix: PREFIX
  });
  const { tax_rates, count, isPending, isError, error } = useTaxRates(
    {
      ...searchParams,
      tax_region_id: taxRegion.id,
      is_default: false
    },
    {
      placeholderData: keepPreviousData
    }
  );
  const { table } = useTaxOverrideTable({
    count,
    data: tax_rates,
    pageSize: PAGE_SIZE,
    prefix: PREFIX
  });
  if (isError) {
    throw error;
  }
  return (0, import_jsx_runtime2.jsx)(Container, { className: "p-0", children: (0, import_jsx_runtime2.jsx)(
    TaxOverrideTable,
    {
      isPending,
      table,
      count,
      action: {
        label: t("actions.create"),
        to: "overrides/create"
      },
      queryObject: raw,
      prefix: PREFIX,
      children: (0, import_jsx_runtime2.jsx)(Heading, { level: "h2", children: t("taxRegions.taxOverrides.header") })
    }
  ) });
};
var TaxRegionDetail = () => {
  const { province_id } = useParams();
  const initialData = useLoaderData();
  const {
    tax_region: taxRegion,
    isLoading,
    isError,
    error
  } = useTaxRegion(province_id, void 0, { initialData });
  const { getWidgets } = useExtension();
  if (isLoading || !taxRegion) {
    return (0, import_jsx_runtime3.jsx)(SingleColumnPageSkeleton, { sections: 2, showJSON: true });
  }
  if (isError) {
    throw error;
  }
  return (0, import_jsx_runtime3.jsxs)(
    SingleColumnPage,
    {
      data: taxRegion,
      showJSON: true,
      widgets: {
        after: getWidgets("tax.details.after"),
        before: getWidgets("tax.details.before")
      },
      children: [
        (0, import_jsx_runtime3.jsx)(TaxRegionProvinceDetailSection, { taxRegion }),
        (0, import_jsx_runtime3.jsx)(TaxRegionProvinceOverrideSection, { taxRegion })
      ]
    }
  );
};
var TaxRegionDetailBreadcrumb = (props) => {
  var _a, _b;
  const { province_id } = props.params || {};
  const { tax_region } = useTaxRegion(province_id, void 0, {
    initialData: props.data,
    enabled: Boolean(province_id)
  });
  if (!tax_region) {
    return null;
  }
  const countryCode = (_a = tax_region.country_code) == null ? void 0 : _a.toUpperCase();
  const provinceCode = (_b = tax_region.province_code) == null ? void 0 : _b.toUpperCase();
  const isValid = isProvinceInCountry(countryCode, provinceCode);
  return (0, import_jsx_runtime4.jsx)("span", { children: isValid ? getProvinceByIso2(provinceCode) : provinceCode });
};
var taxRegionDetailQuery = (id) => ({
  queryKey: taxRegionsQueryKeys.detail(id),
  queryFn: async () => sdk.admin.taxRegion.retrieve(id)
});
var taxRegionLoader = async ({ params }) => {
  const id = params.province_id;
  const query = taxRegionDetailQuery(id);
  return queryClient.ensureQueryData(query);
};
export {
  TaxRegionDetailBreadcrumb as Breadcrumb,
  TaxRegionDetail as Component,
  TaxRegionDetail,
  taxRegionLoader as loader
};
//# sourceMappingURL=tax-region-province-detail-6X46BRIN-SUIAWIER.js.map
